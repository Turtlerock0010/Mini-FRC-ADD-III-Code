--Key Information--
Version: 6
Push date: 12/9/2024
Contributor: @Comandline
Language: C
Libraries: Alfredo_NoU2, PestoLink-Receive
Controller: https://pestol.ink
ESP32 Board: #2
NoU2 Board: #3

--Things To Do Before Pushing Code To ESP32--
1. follow the tutorial to the last detail https://alfredo-nou2.readthedocs.io/en/latest/robot_programming_tutorial_Pesto_Link.html#setup
2. make sure the board of "ESP32 Dev Module" is selected
3. go to tools -> port, then select the port that has "/dev/cu.usbserial-56820021541
4. THIS IS IMPORTANT, WE COULDN'T GET SHIT TO WORK WITHOUT THIS, Tools -> Upload Speed, then select 115200
5. make sure the battery is connected to the NoU2 board and the pale button is pressed down
6. the Anthony Demarcus Demetri III's wheels aren't touching the ground if using joystick

--Extra Notes--
- please flip the wheels fabricators
- The robot on bluetooth is called Anthony Demarcus Demitri III
- When using Joystick or uploading code to control using Joystick keep it the wheels not touching any surface
- in the file wasd.c there is a code with frontleftMotor.set(-1); I do not know if it works

--Version 1 Changelog--
- First version! yippie
- Two driving systems are created
  - Joystick, uses PestoLink's joystick
  - WASD, uses PestoLink's mappable buttons
 NOTE: please don't combine both scripts they have everything in them

--Version 2 Changelog--
- The button 0 is used to test the servo
- Pesto Link website is added to the Notes

--Version 3 Changelog--
- Spelling Changes to the robot's name
- Bluetooth fix added

--Version 4 Changelog--
- Deletion of "bluetoothfix.c" file
- Deletion of "wasd.c" file
- Renamed "joystick.c" file to "main.c"
- Movement system has been decided which is joystick controls on android
- Defined the motors pickUpMotor and shooterMotor
- Defined the servo aimServo
- Button 2 activates pickUpMotor
- Button 3 activates shooterMotor
- New board tally for how much ESP32 and NoU2 boards we go through
- Very big version indeed.

--Version 5 Changelog--
- More comments to existing code
- New integer value "aimDegree"
- New integer value "rotationSpeed"
- Added code for aimServo Functionality
 - Button 0 aims the servo down
 - Button 1 aims the servo up

--Version 6 Changelog--
- More comments
- Fixed faulty code with no semicolons

--Version 7 Changelog--
- Fixed pickUpMotor direction to match robot design
- Changed the Bluetooth Low Energy baud rate from 9600 to 115200
- Pushed possible fix to the aimServo not responding (Credit: @amitac)
- Readied bot for Windows connection
- Bring a windows laptop nerd so you can code
- Readied bot for xbox controller connection